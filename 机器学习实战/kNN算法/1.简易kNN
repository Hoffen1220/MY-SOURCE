# -*- coding:utf-8 -*-
# Author: Tianbao

from numpy import *
import operator
from matplotlib.font_manager import FontProperties
import matplotlib.lines as mlines
import matplotlib.pyplot as plt


def createDataSet():
    groups = array([[1, 101], [5, 89], [108, 5], [115, 8]])  # 四组二维特征
    labels = ['爱情片', '爱情片', '动作片', '动作片']  # 四组特征的标签
    return groups, labels


def classify0(inX, dataSet, labels, k):
    dataSetSize = dataSet.shape[0]  # shape[0]返回行数
    # 距离计算并排序
    diffMat = tile(inX, (dataSetSize, 1)) - dataSet  # tile(A,(B,C))重复A,列方向B次,行方向C次
    sqDiffMat = diffMat ** 2  # 二维特征相减后平方
    sqDistances = sqDiffMat.sum(axis=1)  # sum(0)列相加，sum(1)行相加
    distances = sqDistances ** 0.5  # 开方，计算距离
    sortedDistIndicies = distances.argsort()  # argsort()默认从小到大排序
    classCount = {}  # 计算类别次数的字典
    # 取出前k个元素
    for i in range(k):
        voteIlabel = labels[sortedDistIndicies[i]]
        classCount[voteIlabel] = classCount.get(voteIlabel,
                                                0) + 1  # dict.get(key,default=None),字典的get()方法,返回指定键的值,如果值不在字典中返回默认值
    sortedClassCount = sorted(classCount.items(), key=operator.itemgetter(1), reverse=True)  # 降序排列字典
    return sortedClassCount[0][0]  # 返回次数最多的类别
